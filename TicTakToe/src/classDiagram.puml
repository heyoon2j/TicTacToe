@startuml

/' Player's Interface '/
interface Inputable {
    + {abstract} void getInput(char[][] board)
}

/' Tictactoe's Interface '/
interface Playable {
    + {abstract} void play()
}

interface Simulatable {
    + {abstract} void initialize()
    + {abstract} void finish()
    + {abstract} void reset()
}

interface Printable {
    + {abstract} void printStatus()
}

class Position {
    - int x
    - int y
    + Position()
    + Position(int x, int y)
    + void getX()
    + void getY()
    + void setX()
    + void setY()
}

abstract class Player implements Inputable  {
    - String name
    - int winNum
    - int loseNum
    - Position pos
    - char stone
    + Player()
    + Player(String name)
}

class HumanPlayer extends Player {
    + HumanPlayer(String name)
    + void getInput(char[][] board)
}

class AIPlayer extends Player {
    - {static} int[][][] TWO_BY_TWO
    - {static} int[][][] THREE_ALL
    - {static} int[][] FIRST_POSITION
    - String level
    + AIPlayer(String level)
    + void getInput(char[][] board)
    - void getInput_Beginner(char[][] board)
    - void getInput_Expert(char[][] board)
    - boolean chkTwoByTwo(char[][] board, int x, int y)
    - char changeNumToBoard(char[][] board, int num)
}

class Tictactoe implements Playable, Simulatable, Printable{
    + {static} char[] STONE
    - char[][] board
    - int winningCount
    - Player player1
    - Player player2
    - Player curPlayer

    + Tictactoe(int winningCount)

    + void play()
    + void initialize()
    + void finish()
    + void reset()
    + void getPlayer1()
    + void getPlayer2()
    + Player setPlayer1()
    + Player setPlayer2()
}

class TictactoeRule {
    + {static} int[][] THREE_CHK_TYPE
    + {static} boolean chkVictoryCondition(char[][] board, Position pos)
    + {static} boolean chkDrawCondition(char[][] board)
    + {static} boolean isRangeOfBoard(Position pos)
    + {static} boolean isRangeOfBoard(int x, int y)
    + {static} boolean isEnabled(char[][] board, Position pos)
    + {static} boolean isEnabled(char[][] board, int x, int y)
}

enum AILevel {
    BEGINNER
    ADVANCED
    MASTER
    EXPERT
}


Player o- Position
Tictactoe *- Player
Tictactoe ..> TictactoeRule

@enduml

